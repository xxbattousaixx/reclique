{"version":3,"sources":["Questions.js","Results.js","Boxes.js","Home.js","index.js"],"names":["Questions","props","questions","page","map","question","i","console","log","id","title","description","Results","sub","ans","getAns","res","getRes","qs","res22","c","push","y","Object","keys","correct_answers","entries","length","Col","xs","md","lg","sm","className","q","m","Cr1","Dr1","t1","d1","when","slice","type","Dr","Cr","getSub","res11","rowAns","res222","thisbox","Container","fluid","row","displayResults","Boxes","questions2","getD1","getT1","dr1","getDr1","cr1","getCr1","GetSub","b","a","g","Row","Form","Control","name","value","onChange","e","setD1","target","Select","defaultValue","setT1","setDr1","placeholder","setCr1","displayBoxes","Home","React","useState","getPage","getQuestions","getQuestions2","questions3","getQuestions3","p","useEffect","getAllQuestions","updateInput","result","temp","temp2","n","JSON","stringify","scrollToBottom","scrollIntoView","behavior","axios","get","then","response","allQuestions","data","catch","error","getdr1","Button","onClick","preventDefault","App","path","element"],"mappings":"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","file":"static/js/main.2edfa74a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"jquery/src/jquery\";\n\nexport default function Questions(props) {\n  const { questions } = props;\n  const { page } = props;\n\n  const displayQuestions = (props) =>\n    questions.map((question, i) => {\n      if (i === page) {\n        console.log(i);\n\n        console.log(question);\n\n        return (\n          <div id=\"cq\" key=\"q${i}\">\n            <h1 key=\"title${i}\">{question.title}</h1>\n            <h3 key=\"desc${i}\">{question.description}</h3>\n          </div>\n        );\n      }\n      return \"\";\n    });\n\n  return <>{displayQuestions(props)}</>;\n}\n","import React from \"react\";\nimport \"jquery/src/jquery\";\nimport { Col, Container } from \"react-bootstrap\";\n\n// to display results we will need the JSON feed to know answers and compare it against SUB\n\nexport default function Results(props) {\n  const displayResults = (props) => {\n    const { questions } = props;\n    const { sub } = props;\n    const { ans, getAns } = props;\n    const { res, getRes } = props;\n    // the input reference can be accessed at every change -- a changed value will be held inside this variable\n    const qs = [];\n\n    return questions.map((question, i) => {\n      const res22 = [];\n      // questions\n      for (let c = 0; c < Object.keys(questions).length - 1; c++) {\n        res22.push([c]);\n        qs.push([c]);\n        // entry #\n        for (\n          let y = 0;\n          y < Object.keys(question.correct_answers.entries).length - 1;\n          y++\n        ) {\n          // empty res at every entry -- corrects/incorrects live in q[]\n          getRes();\n          return (\n            <>\n              <Col key=\"col${y}\" xs={3} md={3} lg={3} sm={3}>\n                <p key=\"${y}\" className=\"qt\">\n                  {res}\n                </p>\n                <p>{q[c]}</p>\n                <br />\n              </Col>\n              <Col key=\"col${c}\" xs={1} md={1} lg={1} sm={1} />\n            </>\n          );\n        }\n        res22[c].push([]);\n        let q = [];\n        // populate response22 @ each row - update res\n        for (\n          let m = 0;\n          m < Object.keys(question.correct_answers.entries).length - 1;\n          m++\n        ) {\n          qs[c][y] = [];\n          if ((Cr1 || Dr1) && t1 && d1) {\n            res22[c][y].push({\n              when: d1.slice(2, 7),\n              type: t1,\n              Dr,\n              Cr,\n            });\n          }\n          getSub(res22);\n\n          const res11 = res22;\n          res11[c][y] = {\n            when: question.correct_answers.entries[m].when,\n            type: question.correct_answers.entries[m].type,\n            Dr: question.correct_answers.entries[m].Dr,\n            Cr: question.correct_answers.entries[m].Cr,\n          };\n          getAns(res11);\n          const rowAns = res;\n          const res222 = res22;\n          if (res22[c][y].when == rowAns[c][y].when) {\n            res222[c][y].when = \"correct\";\n            qs[c][y].when = \"correct\";\n          } else {\n            res222[c][y].type = thisbox;\n            res22[c].type = \"incorrect\";\n          }\n\n          if (res22[c][y].type == rowAns[c][y].type) {\n            res222[c][y].Dr = \"correct\";\n            res22[c][y].Dr = \"correct\";\n\n            qs[c][y].Dr = \"correct\";\n          } else {\n            if (res22[c][y].Dr == rowAns[c][y].Dr) {\n              res222[c][y].Dr = \"correct\";\n              res22[c][y].Dr = \"correct\";\n\n              qs[c][y].Dr = \"correct\";\n            }\n\n            if (res22[c][y].Cr == rowAns[c][y].Cr) {\n              qs[c][y].Cr = \"correct\";\n            }\n            if (\n              (res222[c][y].Cr === \"correct\" || res222[c].Dr === \"correct\") &&\n              res222[c].type === \"correct\" &&\n              res222[c].when === \"correct\"\n            ) {\n              qs[c][y] = \"correct\";\n            }\n\n            // qs[question#][entry#].row contains the result at every question entry, if ANY if these are correct the question is right...\n            if (qs[c][y] == \"correct\") {\n              q[c] = \"correct\";\n              // q just contains the final result at each question\n            }\n          }\n\n          // if (i===page){\n        }\n        if (ans[c][y].length > 0) {\n          return (\n            <Container key=\"overview\" fluid>\n              <h4 key=\"n9\" className=\"qt\">\n                {res.map((row, i) => (\n                  <Col key=\"col${i}\" xs={2} md={2} lg={2} sm={2}>\n                    <div>\n                      <h4>\n                        Date--\n                        <br /> Answer:\n                        {ans[{ c }].entries[{ y }].when}\n                        <br /> vs.\n                        <br /> Your answer: {sub[{ c }][{ y }].when}\n                      </h4>\n                      <h4>\n                        Type--\n                        <br /> Answer:\n                        {ans[{ c }].entries[{ y }].type}\n                        <br /> vs.\n                        <br /> Your answer: {sub[{ i }][{ c }].type}\n                      </h4>\n                      <h4>\n                        Dr--\n                        <br /> Answer:\n                        {ans[{ c }].entries[{ y }].Dr}\n                        <br /> vs.\n                        <br /> Your answer:\n                        {sub[{ c }][{ y }].Dr}\n                      </h4>\n                      <h4>\n                        Cr--\n                        <br /> Answer:\n                        {ans[{ c }].entries[{ y }].Cr}\n                        <br /> vs.\n                        <br /> Your answer:\n                        {sub[{ c }][{ y }].Cr}\n                      </h4>\n                    </div>\n                  </Col>\n                ))}\n              </h4>\n              <br />\n            </Container>\n          );\n        }\n      }\n    });\n  };\n  return <>{displayResults(props)}</>;\n}\n","import React from \"react\";\nimport \"jquery/src/jquery\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default function Boxes(props) {\n  const displayBoxes = (props) => {\n    const { questions2 } = props;\n    const { d1, getD1 } = props;\n    const { t1, getT1 } = props;\n    const { dr1, getDr1 } = props;\n    const { cr1, getCr1 } = props;\n\n    const { sub, GetSub } = props;\n \n    // const [d3,getd3]=useState=('');\n    // const [t3,gett3]=useState=('');\n    // const [dr3,getdr3]=useState=('');\n    // const [cr3,getcr3]=useState=('');\n\n    // const [d4,getd4]=useState=('');\n    // const [t4,gett4]=useState=('');\n    // const [dr4,getdr4]=useState=('');\n    // const [cr4,getcr4]=useState=('');\n\n    return questions.map((q) => {\n      for (let b = 0; b < Object.keys(q.correct_answers).length - 1; b++) {\n        // cycle through the total number of entries ~\n        for (let a = 0; a < Object.keys(q.correct_answers[b]).length - 1; a++) {\n          // assign the longest entry length for this question to g\n          if (a > g) {\n            g = a;\n          }\n        }\n      }\n\n      for (let c = 0; c < g; c++) {\n        return (\n          <>\n            <Row key=\"row1${i}\" xs={3} md={3} lg={3} sm={3}>\n              <Col key=\"col2${i}\" xs={3} md={3} lg={3} sm={3}>\n                <Form.Control\n                  key=\"date${i}\"\n                  name=\"date\"\n                  value=\"\"\n                  type=\"date\"\n                  onChange={(e) => setD1(e.target.value)}\n                />\n              </Col>\n              <Col key=\"col3${i}\" xs={3} md={3} lg={3} sm={3}>\n                <Form.Select\n                  key=\"type${i}\"\n                  name=\"type\"\n                  defaultValue=\"\"\n                  onChange={(e) => setT1(e.target.value)}\n                >\n                  <option />\n                  <option>revenue</option>\n                  <option>deferred</option>\n                  <option>cash</option>\n                  <option>receivable</option>\n                  <option>contra</option>\n                  <option>system-credit</option>\n                </Form.Select>\n              </Col>{\" \"}\n              <Col key=\"col4${i}\" xs={3} md={3} lg={3} sm={3}>\n                <Form.Control\n                  key=\"dr${i}\"\n                  name=\"Dr\"\n                  onChange={(e) => setDr1(e.target.value)}\n                  defaultValue=\"\"\n                  type=\"text\"\n                  placeholder=\"$$$\"\n                />\n              </Col>\n              <Col key=\"col5${i}\" xs={3} md={3} lg={3} sm={3} id=\"vl\">\n                <Form.Control\n                  key=\"cr${i}\"\n                  name=\"Cr\"\n                  onChange={(e) => setCr1(e.target.value)}\n                  defaultValue=\"\"\n                  type=\"text\"\n                  placeholder=\"$$$\"\n                />\n              </Col>\n            </Row>\n          </>\n        );\n      }\n      return <></>;\n    });\n  };\n\n  return <>{displayBoxes(props)}</>;\n}\n","import \"./App.css\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"jquery/src/jquery\";\nimport Questions from \"./Questions.js\";\nimport Results from \"./Results.js\";\nimport Boxes from \"./Boxes.js\";\n\n// this input reference will be placed in the active input (onChange)\nexport default function Home() {\n  const baseURL =\n    \"https://reclique.github.io/web-dev-testing/1_accounting_game/questions.json\";\n\n  const [d1, getD1] = (React.useState = \"now\");\n  const [t1, getT1] = (React.useState = \"none\");\n  const [dr1, getDr1] = (React.useState = \"0\");\n  const [cr1, getCr1] = (React.useState = \"0\");\n  const [page, getPage] = (React.useState = \"\");\n  const [sub, getSub] = (React.useState = []);\n  const [res, getRes] = (React.useState = []);\n  const [ans, getAns] = (React.useState = []);\n  const [questions, getQuestions] = React.useState({});\n  const [questions2, getQuestions2] = (React.useState = {});\n  const [questions3, getQuestions3] = (React.useState = {});\n\n  let p = 0;\n  useEffect(() => {\n    getAllQuestions();\n    getPage(p);\n  }, [p]);\n  const submitButton = (e) => {\n    e.preventDefault();\n    updateInput();\n    scrollToBottom();\n  };\n  const updateInput = () => {\n    // first change the state of SUB to reflect the values inside your current BOX\n    // current submissions will be organized in one array\n    const thisbox = \"wrong.\";\n    const result = [];\n    const temp = [];\n    const temp2 = [];\n    // cycle through each question n ~ for every question there are a number of possible answers....\n    for (let n = 0; n < Object.keys(questions).length - 1; n++) {\n      // cycle through each correct answer for this question ~ submissions are correct if they match any of these....\n      // possible answer array\n      temp.push([]);\n      // submission array\n      temp2.push([]);\n      result.push([]);\n      for (\n        let b = 0;\n        b < Object.keys(questions[n].correct_answers).length - 1;\n        b++\n      ) {\n        temp[n] = questions[n].correct_answers.entries;\n      }\n      // push every answers on this page into a comparison updater~~\n      temp2[n] = [];\n      temp2[n].push([]);\n      temp[n] = [];\n      temp[n].push([]);\n      result[n] = [];\n      result[n].push([]);\n      // cycle through the total number of entries ~ can assign correct/incorrect at any given current input\n      for (\n        let a = 0;\n        a < Object.keys(questions[n].correct_answers[b].entries).length - 1;\n        a++\n      ) {\n        // now you can use n,b,a to populate a temporary array with correct/incorrect at each given submission vs answer given\n        temp[n][b] = questions[p].correct_answers.entries[b];\n        console.log(temp[n][b]);\n        result[n][b][a] = thisbox;\n        // now we have three 3D arrays to compare -- Index // Entry Index // property in this slot\n        // if temp[n][b]\n\n        getAns(temp);\n        getSub(temp2);\n        questions.map((q, i) => {\n          console.log(ans);\n          getRes([[[]]]);\n\n          if (ans[n][b].entries.when === sub[n][b].entries.when) {\n            res[n][b].entries.when = \"correct\";\n          }\n          if (ans[n][b].entries.type === sub[n][b].entries.type) {\n            res[n][b].entries.type = \"correct\";\n          }\n          if (ans[b].entries.Dr === sub[n][b].entries.Dr) {\n            res[n][b].entries.Dr = \"correct\";\n          }\n          if (ans[n][b].entries.Cr === sub[n][b].entries.Cr) {\n            res[n][b].entries.Cr = \"correct\";\n          }\n\n          console.log(\"answer in this location\");\n          console.log(JSON.stringify(ans));\n          console.log(\"vs.\");\n          console.log(JSON.stringify(sub));\n          console.log(\"output of current results\");\n          console.log(JSON.stringify(res));\n          console.log(q);\n\n          return <></>;\n        });\n        // getAns(question.correct_answers.entries);\n      }\n    }\n  };\n\n  const scrollToBottom = () => {\n    Results.scrollIntoView({ behavior: \"smooth\" });\n  };\n  // function that will grab JSON with the use of axios\n  const getAllQuestions = () => {\n    axios\n      .get(baseURL)\n      .then((response) => {\n        const allQuestions = response.data;\n        getQuestions(allQuestions);\n        getQuestions2(allQuestions);\n        getQuestions3(allQuestions);\n      })\n      .catch((error) => console.error(`Error: ${{ error }}`));\n  };\n  // On render we will grab the JSON and start at page p=0 which is actively updated\n\n  // grabs the page number ++ and updates the current state to show the page\n  const onNext = (e) => {\n    if (p < questions.length - 1) {\n      p++;\n\n      if (p >= 0 && p < questions.length) {\n        // getSub()\n\n        getPage(p);\n        p--;\n      }\n    } else if (p === questions.length - 1) {\n      getPage(p);\n    }\n  };\n  const onPrev = (e) => {\n    if (p > 0) {\n      p--;\n\n      if (p <= questions.length - 1 && p >= 0) {\n        // getSub()\n        getPage(p);\n      }\n    } else if (p === 0) {\n      getPage(p);\n    }\n  };\n\n  // the submit button essentially displays the result after comparing complete SUB vs ANS\n  // const submitButton = (e) => {\n  //   e.preventDefault();\n  //   updateInput();\n  //   scrollToBottom();\n  // };\n  // here we return the frame of the website with the three child components making it up -- Questions, Boxes, Results\n  return (\n    <>\n      <Questions key=\"questions${page}\" questions={questions} page={page} />\n      <Container key=\"head${page}\" id=\"cf\" fluid>\n        <br />\n        <hr />\n        <br />\n        <br />\n        <Row xs={3} md={3} lg={3} sm={3}>\n          <Col xs={3} md={3} lg={3} sm={3} />\n          <Col xs={3} md={3} lg={3} sm={3} />\n          <Col xs={3} md={3} lg={3} sm={3}>\n            &nbsp;\n          </Col>\n          <Col xs={3} md={3} lg={3} sm={3} id=\"vl\">\n            &nbsp;\n          </Col>\n        </Row>\n        <Row xs={3} md={3} lg={3} sm={3} id=\"bb\">\n          <Col xs={3} md={3} lg={3} sm={3} />\n          <Col xs={3} md={3} lg={3} sm={3} />\n          <Col xs={3} md={3} lg={3} sm={3}>\n            {\" \"}\n            Dr\n          </Col>\n          <Col xs={3} md={3} lg={3} sm={3} id=\"vl\">\n            Cr\n          </Col>\n        </Row>\n        <Row xs={3} md={3} lg={3} sm={3}>\n          <Col xs={3} md={3} lg={3} sm={3} />\n          <Col xs={3} md={3} lg={3} sm={3} />\n          <Col xs={3} md={3} lg={3} sm={3}>\n            &nbsp;\n          </Col>\n          <Col xs={3} md={3} lg={3} sm={3} id=\"vl\">\n            &nbsp;\n          </Col>\n        </Row>\n      </Container>\n      <Container key=\"boxes\" fluid>\n        <div id=\"box\" key=\"box${p}\" className=\"b\">\n          <Boxes\n            key=\"boxes\"\n            getSub={getSub}\n            sub={sub}\n            questions={questions2}\n            p={p}\n            getD1={getD1}\n            getT1={getT1}\n            getdr1={getDr1}\n            getCr1={getCr1}\n          />\n        </div>\n      </Container>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <hr />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <Container key=\"buttons${p}\" fluid>\n        <Row xs={4} md={4} lg={4} sm={4}>\n          <Col xs={2} md={2} lg={2} sm={2} />\n          <Col xs={4} md={4} lg={4} sm={4}>\n            <Button onClick={onPrev}>Previous</Button>\n          </Col>\n          <Col xs={4} md={4} lg={4} sm={4}>\n            <Button onClick={onNext}>Next</Button>\n          </Col>\n          <Col xs={2} md={2} lg={2} sm={2} />\n          <br />\n          <br />\n          <br />\n          <br />\n        </Row>\n      </Container>\n      <Container key=\"results{p}\" fluid>\n              <Row xs={12} md={12} lg={12} sm={12}>\n                <Col xs={12} md={12} lg={12} sm={12}>\n                  <Button onClick={submitButton}>Submit</Button>\n                </Col>\n              </Row>\n              <br />\n              <br />\n              <hr />\n              <br />\n              <br />\n              <div id=\"containerEndRef\" />\n              <br />\n              <br />\n      <Results\n        key=\"resultslist${p}\"\n        ans={ans}\n        getAns={getAns}\n        res={res}\n        getRes={getRes}\n        questions={questions3}\n      />\n</Container>\n\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Routes, Link, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\n\nconst App = function () {\n  return (\n    <div className=\"App\">\n      {\" \"}\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}